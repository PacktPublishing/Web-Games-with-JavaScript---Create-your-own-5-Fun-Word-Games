The map() method creates a new array populated with the results of calling a provided function on every element in the calling array.

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map

let newArray = arr.map(callback(currentValue[, index[, array]]) {
  // return element for newArray, after executing something
}[, thisArg]);



The DOMContentLoaded event fires when the initial HTML document has been completely loaded and parsed, without waiting for stylesheets, images, and subframes to finish loading.

https://developer.mozilla.org/en-US/docs/Web/API/Window/DOMContentLoaded_event

const gameArea = document.querySelector('.gameArea');
const userInput = document.createElement('textarea');
const output = document.createElement('div');
const btn = document.createElement('button');
const output1 = document.createElement('div');
//
output1.style.fontSize = '0.7em';
output1.style.backgroundColor = '#ddd';
output1.style.padding = '10px';
btn.textContent = 'Create Message code';
btn.style.display = 'block';
userInput.style.width = '600px';
userInput.style.height = '50px';
userInput.value = "hello world";

//add elements to html page
gameArea.append(output);
gameArea.append(userInput);
gameArea.append(btn);
gameArea.append(output1);
window.addEventListener('DOMContentLoaded',init);

function init(){
    let html = '';
    for(let i=97;i<123;i++){
        let val = String.fromCharCode(i);
        //console.log(i,val);
        html += `${i-96}=${val} `;
    }
    output1.innerHTML = html;
}


//add interaction
btn.addEventListener('click',(e)=>{
    let rep = makeOutput1(userInput.value);
    output.textContent = rep;
    console.log(rep);
})


function makeOutput1(val){
    let temp = val.split('').map((ltr)=>{
        return ltr.toLowerCase().charCodeAt(0)-96;
    })
    return temp.join('-').replace(/--64-/g,' ');
}


function makeOutput(val){
    let holder = [];
    for(let i=0;i<val.length;i++){
        let charVal = val.charAt(i);
        //console.log(charVal);
        let coded = charVal.toLowerCase().charCodeAt(0)-96;
        console.log(coded);
        holder.push(coded);
    } 
    let temp = holder.join('-');
    let temp1 = temp.replace(/--64-/g,' ');
    console.log(temp1);
    return temp1;
}